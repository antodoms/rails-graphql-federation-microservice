log_format testlog '$remote_addr - $remote_user [$time_local] '
               '"$request" $status $bytes_sent '
               '"$http_referer" $http_user_agent $request_body $gzip_ratio '
               '"$request_time $upstream_connect_time $upstream_header_time $upstream_response_time ';

# Determine the upstream of three services
upstream event-service {
  # This is pointing to the Event Service as out frontend code is present there
  server docker.for.mac.localhost:3000;
}

upstream gateway-service {
  # This is pointing gateway service which is runnning apollo federation gateway
  server docker.for.mac.localhost:4000;
}


# Write the reverse proxy
server {
    # Determine where to output the log
    access_log /var/log/nginx/access.log;
    # expose port 80
    listen 80;
    # do the same with service two and service three
    location / {
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header Host $http_host;
      proxy_set_header X-Forwarded-Proto $scheme;
      proxy_pass http://event-service;

      proxy_http_version 1.1;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection "upgrade";
    }

    location /graphql {
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header Host $http_host;
      proxy_set_header X-Forwarded-Proto $scheme;
      # do not forget to include the scheme which is http
      proxy_pass http://gateway-service;
    }
}